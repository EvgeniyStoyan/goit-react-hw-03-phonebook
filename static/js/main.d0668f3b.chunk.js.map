{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","s","contacts_list","map","id","name","number","item","contact_text","type","onClick","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","container_form","form","htmlFor","label_text","input_form","onChange","pattern","title","required","button_form","Component","Filter","label_filter","input_filter","App","filter","addContacts","contactNames","contact","toLocaleLowerCase","nameEntered","includes","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0668f3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_filter\":\"Filter_label_filter__SP97o\",\"input_filter\":\"Filter_input_filter__S2QdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_form\":\"ContactForm_container_form__Xjj1N\",\"form\":\"ContactForm_form__2UEAU\",\"label_text\":\"ContactForm_label_text__g2WeM\",\"input_form\":\"ContactForm_input_form__Cd9sr\"};","import React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul className={s.contacts_list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.item} key={id}>\r\n            <p className={s.contact_text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleChange, handleSubmit } = this;\r\n    return (\r\n      <div className={s.container_form}>\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n          <label htmlFor={this.nameInputId} className={s.label_text}>\r\n            Name\r\n            <input\r\n              className={s.input_form}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId} className={s.label_text}>\r\n            Number\r\n            <input\r\n              className={s.input_form}\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={handleChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={s.button_form}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label className={s.label_filter}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input_filter}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport shortid from 'shortid';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  componentWillMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContacts = (name, number) => {\n    const contactNames = this.state.contacts.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n    const nameEntered = name.toLocaleLowerCase();\n\n    if (contactNames.includes(nameEntered)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list\":\"ContactList_contacts_list__2IDsK\",\"item\":\"ContactList_item__2v--f\",\"contact_text\":\"ContactList_contact_text__1HMxC\"};"],"sourceRoot":""}